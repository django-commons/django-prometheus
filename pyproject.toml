[project]
name = "django-prometheus"
authors = [{name = "Uriel Corfa", email = "uriel@corfa.fr"}]
license = {text = "Apache"}
description = "Django middlewares to monitor your application with Prometheus.io."
keywords = ["django", "monitoring", "prometheus"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Topic :: System :: Monitoring",
    "License :: OSI Approved :: Apache Software License",
]
dependencies = ["prometheus-client>=0.7"]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/korfuri/django-prometheus"
Changelog = "https://github.com/korfuri/django-prometheus/blob/master/CHANGELOG.md"
Documentation = "https://github.com/korfuri/django-prometheus/blob/master/README.md"
Source = "https://github.com/korfuri/django-prometheus"
Tracker = "https://github.com/korfuri/django-prometheus/issues"

[project.optional-dependencies]
testing = ["pytest", "pytest-django"]

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
exclude = ["tests"]
namespaces = false

[tool.setuptools.dynamic]
version = {attr = "django_prometheus.__version__"}

[build-system]
requires = [ "setuptools >= 67.7.2", "wheel >= 0.40.0"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = " --ignore django_prometheus/tests/end2end"

[tool.isort]
multi_line_output = 3
line_length = 88
force_grid_wrap = 0
include_trailing_comma = true

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120


[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.4
envlist = {py37,py38,py39,py310,py311}-django{320}-{end2end,unittests},{py38,py39,py310,py311}-django{400,410,420}-{end2end,unittests},py39-lint

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39, py39-lint
    3.10: py310
    3.11: py311

[testenv]
deps =
    django320: Django>=3.2,<3.3
    django400: Django>=4.0,<4.1
    django410: Django>=4.1,<4.2
    django420: Django>=4.2,<4.3
    coverage
    -rrequirements.txt
skip_missing_interpreters=true

changedir =
    end2end: {toxinidir}/django_prometheus/tests/end2end
setenv =
    end2end: PYTHONPATH = {toxinidir}
    end2end: DJANGO_SETTINGS_MODULE=testapp.settings
commands =
    end2end: coverage run --source=django_prometheus -m pytest testapp/
    unittests: coverage run --source=django_prometheus setup.py test
    unittests: python setup.py sdist bdist_wheel

[testenv:py39-lint]
deps =
    black==23.3.0
    flake8
    ruff==0.0.262
    isort>=5.12.0,<6
    flake8-debugger
    flake8-2020
    flake8-comprehensions
    flake8-bugbear
commands =
    black --check django_prometheus/
    flake8 django_prometheus
    isort --check-only django_prometheus/
    ruff check django_prometheus/

"""
